datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     String  @id @default(cuid())
  email                  String  @unique
  isMarketingConsented   Boolean @default(false)
  requiredCookiesEnabled Boolean @default(false)
  optionalCookiesEnabled Boolean @default(false)
  banned                 Boolean @default(false)
  superuser              Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password    Password?
  submissions UserSubmission[]
}

model Password {
  hash String

  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Category {
  id    String @id @default(cuid())
  title String @unique

  superCategoryId String?          @unique
  supercategory   Category?        @relation("CategorySubcategory", fields: [superCategoryId], references: [id])
  subcategories   Category[]       @relation("CategorySubcategory")
  links           LinkInCategory[]
}

model Link {
  id          String  @id @default(cuid())
  title       String  @unique
  url         String  @unique
  description String  @unique
  snapshot    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories LinkInCategory[]
}

model LinkInCategory {
  link       Link     @relation(fields: [linkId], references: [id])
  linkId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  assignedAt   DateTime @default(now())
  reassignedAt DateTime @updatedAt

  @@id([linkId, categoryId])
}

model Submission {
  id              String @id @default(cuid())
  url             String @unique
  submissionCount Int    @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  submissionAuthors UserSubmission[]
}

model UserSubmission {
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId String

  assignedAt   DateTime @default(now())
  reassignedAt DateTime @updatedAt

  @@id([userId, submissionId])
}
